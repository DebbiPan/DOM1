{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","warp","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","innerHTMl","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //增\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },//用于创建节点\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },//用于新增弟弟\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },//用于新增哥哥\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },//用于新增儿子\r\n    warp(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },//用于新增爸爸\r\n\r\n    //删\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },//删除节点\r\n\r\n    empty(node) {\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },//删除后代\r\n\r\n    //改\r\n    attr(node, name, value) {//重载，根据参数的不同个数，写不同的代码\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) {//适配，适用于适用浏览器\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string//ie\r\n            } else {\r\n                node.textContent = string//firefox,chrome\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },//用于读写文本\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTMl = string\r\n        } else if (arguments.length.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },//读写HTMl内容\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            //dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                //dom.style(div,{color:'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    //key可能为border、color  node.style.style.border/color\r\n                    //可能是对象或者字符串，是对象就设置它的值，是字符串就获取它的值\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },//修改style\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },//添加，删除，获取class\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },//添加监听事件\r\n\r\n    //查\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },//获得标签（们）\r\n    parent(node) {\r\n        return node.parentNode\r\n    },//用于获取父元素\r\n    children(node) {\r\n        return node.children\r\n    },//用于获取子元素\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },//获取兄弟姐妹元素\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },//获取弟弟\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },//获取哥哥\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },//遍历\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }//获取排行老几\r\n}"]}